<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products - Admin Dashboard - SHOEZIE</title>

        <!-- Cropper.js CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" />
    
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <!-- Bootstrap CSS CDN -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/styles/admin/dashboard.css"> <!-- Point to your custom CSS -->
    <link rel="stylesheet" href="/styles/admin/products.css"> <!-- Add custom styles for the products page -->
    <style>
        .is-invalid {
    border-color: red;
}

    </style>
</head>

<body>
    <div class="d-flex" id="wrapper">
        <!-- Sidebar -->
        <%- include('partials/sidebar.ejs') %>
        <!-- Page Content -->
        <div id="page-content-wrapper">
            <!-- Navbar -->
            <%- include('partials/navbar.ejs') %>
            <!-- Content Area -->
            <div class="container">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h5 class="mb-0">Products</h5>
                    <button class="btn btn-sm btn-primary" data-toggle="modal" data-target="#addProductModal">
                        Add Product</button>
                </div>
                <!-- Product Table -->
                <% if(product){ %>
                    <table class="custom-table">
                        <thead>
                            <tr>
                                <th scope="col">Image</th>
                                <th scope="col">Product Name</th>
                                <th scope="col">Category</th>
                                <th scope="col">Price</th>
                                <th scope="col">Stock</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% product.forEach(product => { %>
                                <tr>
                                    <td>
                                        <img src="<%= product.imageUrls[0] %>" alt="Product Image" class="img-thumbnail product-table-image">
                                    </td>
                                    <td><%= product.name %></td>
                                    <td><%= product.category.name%></td>
                                    <td><%= product.price %></td>
                                    <td>
                                        <select class="form-control">
                                            <% product.sizes.forEach(size => { %>
                                                <option value="<%= size.size %>">
                                                   UK<%= size.size %> - Stock: <%= size.stock %>
                                                </option>
                                            <% }); %>
                                        </select>
                                    </td>
                                    <td>
                                        <button class="btn btn-warning btn-sm" data-toggle="modal" data-target="#editProductModal"
                                            onclick="populateEditModal('<%= product.name %>', '<%= product.description %>', 
                                            '<%= product.category.name %>', '<%= product.price %>', '<%= JSON.stringify(product.sizes) %>', 
                                            '<%= JSON.stringify(product.imageUrls) %>', '<%= product._id %>')">
                                            <i class="fas fa-edit icon-spacing"></i>Edit
                                        </button>
                                        <button class="btn <%= product.status ? 'btn-danger' : 'btn-success' %> btn-sm" 
                                            onclick="toggleProductStatus('<%= product._id %>', this)">
                                            <%= product.status ? 'Unlist' : 'List' %>
                                           </button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    
                <% }else{ %>
<div> no uers found</div>
    <% } %>
            </div>
        </div>
    </div>

<!-- Modal for Adding Product -->
<div class="modal fade" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body p-3">
                <form id="addProductForm" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="productName">Name</label>
                                <input type="text" class="form-control" name="productName" id="productName" placeholder="Enter product name" required>
                            </div>
                            <div class="form-group">
                                <label for="productDescription">Description</label>
                                <textarea class="form-control" name="productDescription" id="productDescription" placeholder="Enter product description" required></textarea>
                            </div>
                            <div class="form-group">
                                <label for="productCategory">Category</label>
                                <select class="form-control" name="productCategory" id="productCategory" required>
                                    <option value="">Select a category</option>
                                    <% category.forEach(category =>{%>
                                        <option value="<%= category._id %>"><%= category.name %></option>
                                    <%}) %>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="productPrice">Price</label>
                                <input type="number" class="form-control" name="productPrice" id="productPrice" placeholder="Enter product price" min="1" required>
                            </div>
                            <div class="form-group mt-4" id="sizeStockContainer">
                                <label>Sizes and Stocks</label>
                                <div class="row align-items-center size-stock-pair">
                                    <div class="col-md-5">
                                        <input type="text" class="form-control" name="productSize[]" placeholder="Enter size" required>
                                    </div>
                                    <div class="col-md-5">
                                        <input type="number" class="form-control" name="productStock[]" placeholder="Enter stock" min="1" required>
                                    </div>
                                    <div class="col-md-2">
                                        <button type="button" class="btn btn-success add-size-stock">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div class="form-group img-group mt-4" style="display: none;">
                                   
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="productImage">Image</label>
                                <input type="file" class="form-control" name="productImage[]" id="productImage" accept="image/*" multiple>
                            </div>
                            <div style="height: 340px; margin-top: 20px;">
                                <img id="imagePreview" style="display: none;" />
                                <button type="button" class="btn btn-primary btn-sm mt-3" id="cropImageButton" style="display: none;">Crop Image</button>
                            </div>
                          
                        </div>
                    </div>
             
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="addProductButton">Add Product</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.querySelector('.add-size-stock').addEventListener('click', function() {
        const container = document.getElementById('sizeStockContainer');
        const newPair = document.createElement('div');
        newPair.className = 'row align-items-center size-stock-pair mt-2';
        newPair.innerHTML = `
            <div class="col-md-5">
                <input type="text" class="form-control" name="productSize[]" placeholder="Enter size" required>
            </div>
            <div class="col-md-5">
                <input type="number" class="form-control" name="productStock[]" placeholder="Enter stock" min="1" required>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-danger remove-size-stock">
                    <i class="fas fa-minus"></i>
                </button>
            </div>
        `;
        container.appendChild(newPair);
        
        // Add event listener for the new remove button
        newPair.querySelector('.remove-size-stock').addEventListener('click', function() {
            container.removeChild(newPair);
        });
    });
</script>


   <!-- Modal for Editing Product -->
<div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document"> <!-- Added 'modal-lg' class for larger modal -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body p-3">
                <form id="editProductForm"  enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="editProductName">Name</label>
                                <input type="text" class="form-control" id="editProductName" placeholder="Enter product name" required>
                            </div>
                            <input type="hidden"id="editProductId">
                            <div class="form-group">
                                <label for="editProductDescription">Description</label>
                                <textarea type="text" class="form-control" id="editProductDescription" placeholder="Enter product description" required> </textarea>
                            </div>
                            <div class="form-group">
                                <label for="editProductCategory">Category</label>
                                <select class="form-control" name="editProductCategory" id="editProductCategory" required>
                                    <% category.forEach(category =>{%>
                                        <option value="<%= category.name %>"><%= category.name %></option>
                                    <%}) %>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="editProductPrice">Price</label>
                                <input type="number" class="form-control" id="editProductPrice" placeholder="Enter product price" required>
                            </div>
                            <p class="mb-0"><small>Sizes and Stocks</small></p>
                            <div class="form-group mt-4" id="editSizeStockContainer">
                            </div>
                            <div>
                                <div class="form-group edit-img-group mt-4" id="editProductImageView" >
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="editProductImage">Update Image</label>
                                <input type="file" class="form-control" id="editProductImage" accept="image/*" multiple>
                            </div>
                            <div id="cropperContainer" style="display: none; margin-top: 20px; height: 340px;">
                                <img id="cropImage" src="" style="max-width: 100%;" />
                                <button type="button" class="btn btn-primary btn-sm mt-3" id="editCropImageButton">Crop Image</button>
                            </div>
                            <!-- <img id="editImagePreview" style="display: none; max-width: 100%;" />
                            <button type="button" id="editCropImageButton" style="display: none;">Crop Image</button> -->
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="editProductButton">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

      <script src="/js/product.js"></script>
    <!-- Bootstrap and jQuery Scripts -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Cropper.js JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
    <script>
        // Function to validate the product name
        // function validateProductName() {
        //     const nameInput = document.getElementById('productName');
        //     const nameValue = nameInput.value.trim();
        //     const isValid = nameValue.length >= 3; // Minimum length of 3 characters
        //     nameInput.classList.toggle('is-invalid', !isValid);
        //     return isValid;
        // }
    
        // // Function to validate the product price
        // function validateProductPrice() {
        //     const priceInput = document.getElementById('productPrice');
        //     const priceValue = priceInput.value.trim();
        //     const isValid = priceValue > 0; // Price must be greater than 0
        //     priceInput.classList.toggle('is-invalid', !isValid);
        //     return isValid;
        // }
    
        // // Function to validate the product size and stock inputs
        // function validateSizeStock() {
        //     const sizeInputs = document.querySelectorAll('input[name="productSize[]"]');
        //     const stockInputs = document.querySelectorAll('input[name="productStock[]"]');
        //     let isValid = true;
    
        //     sizeInputs.forEach((input, index) => {
        //         if (input.value.trim() === '' || stockInputs[index].value <= 0) {
        //             input.classList.add('is-invalid');
        //             stockInputs[index].classList.add('is-invalid');
        //             isValid = false;
        //         } else {
        //             input.classList.remove('is-invalid');
        //             stockInputs[index].classList.remove('is-invalid');
        //         }
        //     });
    
        //     return isValid;
        // }
    
        // // Add event listeners for real-time validation on Add Product Modal
        // document.getElementById('productName').addEventListener('input', validateProductName);
        // document.getElementById('productPrice').addEventListener('input', validateProductPrice);
        // document.querySelectorAll('input[name="productSize[]"], input[name="productStock[]"]').forEach(input => {
        //     input.addEventListener('input', validateSizeStock);
        // });
    
        // // Similar functions for Edit Product Modal
        // function validateEditProductName() {
        //     const nameInput = document.getElementById('editProductName');
        //     const nameValue = nameInput.value.trim();
        //     const isValid = nameValue.length >= 3; // Minimum length of 3 characters
        //     nameInput.classList.toggle('is-invalid', !isValid);
        //     return isValid;
        // }
    
        // function validateEditProductPrice() {
        //     const priceInput = document.getElementById('editProductPrice');
        //     const priceValue = priceInput.value.trim();
        //     const isValid = priceValue > 0; // Price must be greater than 0
        //     priceInput.classList.toggle('is-invalid', !isValid);
        //     return isValid;
        // }
    
        // // Add event listeners for real-time validation on Edit Product Modal
        // document.getElementById('editProductName').addEventListener('input', validateEditProductName);
        // document.getElementById('editProductPrice').addEventListener('input', validateEditProductPrice);
    
        // // Validate on form submission
        // document.getElementById('addProductButton').addEventListener('click', function(event) {
        //     const isNameValid = validateProductName();
        //     const isPriceValid = validateProductPrice();
        //     const isSizeStockValid = validateSizeStock();
    
        //     if (!isNameValid || !isPriceValid || !isSizeStockValid) {
        //         event.preventDefault(); // Prevent form submission if validation fails
        //         alert('Please correct the highlighted fields.');
        //     } else {
        //         document.getElementById('addProductForm').submit(); // Submit the form if valid
        //     }
        // });
    
        // document.getElementById('editProductButton').addEventListener('click', function(event) {
        //     const isNameValid = validateEditProductName();
        //     const isPriceValid = validateEditProductPrice();
    
        //     if (!isNameValid || !isPriceValid) {
        //         event.preventDefault(); // Prevent form submission if validation fails
        //         alert('Please correct the highlighted fields.');
        //     } else {
        //         document.getElementById('editProductForm').submit(); // Submit the form if valid
        //     }
        // });
    </script>
    
</body>
</html>

