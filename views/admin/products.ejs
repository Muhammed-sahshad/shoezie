<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products - Admin Dashboard - SHOEZIE</title>

        <!-- Cropper.js CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" />
    
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <!-- Bootstrap CSS CDN -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/styles/admin/dashboard.css"> <!-- Point to your custom CSS -->
    <link rel="stylesheet" href="/styles/admin/products.css"> <!-- Add custom styles for the products page -->
</head>

<body>
    <div class="d-flex" id="wrapper">
        <!-- Sidebar -->
        <%- include('partials/sidebar.ejs') %>
        <!-- Page Content -->
        <div id="page-content-wrapper">
            <!-- Navbar -->
            <%- include('partials/navbar.ejs') %>

            <!-- Content Area -->
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2 class="mb-0">Products</h2>
                    <button class="btn btn-primary" data-toggle="modal" data-target="#addProductModal">Add
                        Product</button>
                </div>
                <!-- Product Table -->
                <% if(product){ %>
                <table class="table table-striped">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col">Image</th>
                            <th scope="col">Product Name</th>
                            <th scope="col">Category</th>
                            <th scope="col">Price</th>
                            <th scope="col">Stock</th>
                            <th scope="col">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                   <% product.forEach(product => { %>
                        <tr>
                            <td><img src="<%= product.imageUrls[0]%>" alt="Product Image"
                                    class="img-thumbnail product-table-image"></td>
                            <td><%= product.name %></td>
                            <td><%= product.category %></td>
                            <td><%= product.price %></td>
                            <td><%= product.stock %></td>
                            <td>
                                <button class="btn btn-warning btn-sm" data-toggle="modal"
                                    data-target="#editProductModal"
                                    onclick="populateEditModal('<%= product.name %>', '<%= product.category %>',' <%= product.price %>', '<%= product.stock %>')">Edit</button>
                                <button class="btn btn-danger btn-sm"
                                    onclick="showConfirmDeleteModal('<%= product._id %>','<%= product.name%>')">Delete</button>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
                <% }else{ %>
<div> no uers found</div>
    <% } %>
            </div>
        </div>
    </div>

<!-- Modal for Adding Product -->
<div class="modal fade" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document"> <!-- Added 'modal-lg' class for larger modal -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body p-3">
                <form id="addProductForm" action="/admin/product" method="POST" enctype="multipart/form-data"> <!-- Moved form tag here -->
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="productName">Name</label>
                                <input type="text" class="form-control" name="productName" id="productName" placeholder="Enter product name" required>
                            </div>
                            <div class="form-group">
                                <label for="productDescription">Description</label>
                                <input type="text" class="form-control" name="productDescription" id="productDescription" placeholder="Enter product description" required>
                            </div>
                            <div class="form-group">
                                <label for="productCategory">Category</label>
                                <input type="text" class="form-control" name="productCategory" id="productCategory" placeholder="Enter product category" required>
                            </div>
                            <div class="form-group">
                                <label for="productPrice">Price</label>
                                <input type="number" class="form-control" name="productPrice" id="productPrice" placeholder="Enter product price" required>
                            </div>
                            <div class="form-group">
                                <label for="productStock">Stock</label>
                                <input type="number" class="form-control" name="productStock" id="productStock" placeholder="Enter product stock" required>
                            </div>
                            <div>
                                <div class="form-group img-group mt-4 " style="display: none;">
                                    <img  src="#" alt="img1">
                                    <img src="#" alt="img2">
                                    <img src="#" alt="img3">
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="productImage">Image</label>
                                <input type="file" class="form-control" name="productImage[]" id="productImage" accept="image/*" multiple>
                            </div>
                            <img id="imagePreview" style="display: none; "  />
                            <button type="button" class="btn btn-primary" id="cropImageButton" style="display: none;">Crop Image</button>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="addProductButton">Add Product</button>
                    </div>
                </form> <!-- Form tag now wraps all elements -->
            </div>
        </div>
    </div>
</div>


    <!-- Modal for Editing Product -->
    <div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editProductForm">
                        <div class="form-group">
                            <label for="editProductName">Name</label>
                            <input type="text" class="form-control" id="editProductName"
                                placeholder="Enter product name">
                        </div>
                        <div class="form-group">
                            <label for="editProductCategory">Category</label>
                            <input type="text" class="form-control" id="editProductCategory"
                                placeholder="Enter product category">
                        </div>
                        <div class="form-group">
                            <label for="editProductPrice">Price</label>
                            <input type="number" class="form-control" id="editProductPrice"
                                placeholder="Enter product price">
                        </div>
                        <div class="form-group">
                            <label for="editProductStock">Stock</label>
                            <input type="number" class="form-control" id="editProductStock"
                                placeholder="Enter product stock">
                        </div>
                        <div class="form-group">
                            <label for="editProductImage">Update Image</label>
                            <input type="file" class="form-control-file" id="editProductImage">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Confirming Deletion -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog"
aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Deletion</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <p>Are you sure you want to delete <span class="font-weight-bold" id="delete-target"></span></p>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
        </div>
    </div>
</div>
</div>

    <!-- Bootstrap and jQuery Scripts -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Cropper.js JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>

<script>
    // Sidebar toggle functionality
    document.getElementById('menuToggle').addEventListener('click', function () {
        document.getElementById('sidebar').classList.toggle('active');
        document.getElementById('page-content-wrapper').classList.toggle('toggled');
    });

    // Variables to handle modal actions
    let productToDelete = null;

function showConfirmDeleteModal(productId,productName) {
    document.getElementById('delete-target').innerHTML=productName
    productToDelete = productId; // Store the product ID
    $('#confirmDeleteModal').modal('show'); // Show the modal
    
}

document.getElementById('confirmDeleteButton').addEventListener('click', function () {
    if (productToDelete) {
        // Send a DELETE request to your server
        fetch(`/admin/products/delete/${productToDelete}`, {
            method: 'DELETE',
        })
        .then(response => {
            if (response.ok) {
                console.log('Product deleted:', productToDelete);
                $('#confirmDeleteModal').modal('hide'); // Hide the modal
                // Optionally refresh the product list or remove the product from the UI
                // For example, you could remove the product row from the table
                location.reload();
            } else {
                console.error('Error deleting product:', response.statusText);
            }
        })
        .catch(error => {
            console.error('Error deleting:', error);
        });
    }
});
 

    document.getElementById('confirmDeleteButton').addEventListener('click', function () {
        if (productToDelete) {
            console.log('Product deleted:', productToDelete);
            $('#confirmDeleteModal').modal('hide');
        }
    });

    function populateEditModal(name, category, price, stock, imageUrl) {
        price=parseInt(price)
        document.getElementById('editProductName').value = name;
        document.getElementById('editProductCategory').value = category;
        document.getElementById('editProductPrice').value = price;
        document.getElementById('editProductStock').value = stock;
    }

let cropper;
const imageInput = document.getElementById('productImage');
const imagePreview = document.getElementById('imagePreview');
const cropImageButton = document.getElementById('cropImageButton');
let croppedFiles = [];
const originalFiles = []; // To store original files
const imageGroup = document.querySelector('.img-group');

imageInput.addEventListener('change', function (event) {
    imageGroup.innerHTML = '';
    imageGroup.style.display = 'block';

    const files = event.target.files;
    console.log(files);
    
    // Loop through the selected files and display them
    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        originalFiles[i] = file; // Store the original files
        const reader = new FileReader();

        reader.onload = function (e) {
            // Create a new image element
            const img = document.createElement('img');
            img.src = e.target.result;
            img.alt = `Image ${i + 1}`;
            img.style.maxWidth = '100px';
            img.style.marginRight = '10px';
            img.style.border = '1px solid #ccc';

            // Append the image to the image group
            imageGroup.appendChild(img);

            // Add click event to open in cropper
            img.addEventListener('click', function () {
                // Destroy existing cropper instance if it exists
                if (cropper) {
                    cropper.destroy();
                }

                // Show the clicked image in the preview
                imagePreview.src = img.src;
                imagePreview.style.display = 'block';
                cropImageButton.style.display = 'block';

                // Initialize Cropper.js with the selected image
                cropper = new Cropper(imagePreview, {
                    aspectRatio: 1,
                    viewMode: 1,
                    autoCrop: true,
                    autoCropArea: 1,
                    background: false,
                    cropBoxResizable: true,
                    cropBoxMovable: true,
                    minCropBoxWidth: 80,
                    minCropBoxHeight: 80,
                });

                // Update the cropped file on cropping
                cropImageButton.onclick = function () {
                    const canvas = cropper.getCroppedCanvas();
                    canvas.toBlob((blob) => {
                        const croppedFile = new File([blob], 'croppedImage.png', {
                            type: 'image/png',
                            lastModified: Date.now(),
                        });
                        // Replace the original image source with the cropped image
                        img.src = URL.createObjectURL(croppedFile);

                        // Store cropped file in the array
                        croppedFiles[i] = croppedFile; // Save cropped image to array
                    });
                };
            });
        };

        // Read the file as a data URL 
        reader.readAsDataURL(file); 
    }
});

// Event listener for the Add Product button
document.getElementById('addProductButton').addEventListener('click', function (event) {
    event.preventDefault(); // Prevent the default form submission
    const formData = new FormData();
    
    // Append cropped files or original files to FormData
    croppedFiles.forEach((file, index) => {
        formData.append('productImage[]', file, `croppedImage${index}.png`);
    });

    // Append original files if they were not cropped
    originalFiles.forEach((file, index) => {
        if (!croppedFiles[index]) { // If no cropped version exists
            formData.append('productImage[]', file);
        }
    });

    // Append other form fields
    formData.append('productName', document.getElementById('productName').value);
    formData.append('productDescription', document.getElementById('productDescription').value);
    formData.append('productCategory', document.getElementById('productCategory').value);
    formData.append('productPrice', document.getElementById('productPrice').value);
    formData.append('productStock', document.getElementById('productStock').value);

    // Upload to your backend
    fetch('/admin/products/add', {
        method: 'POST',
        body: formData,
    }).then(response => {
        if (response.ok) {
            console.log('Product added successfully');
            $('#addProductModal').modal('hide'); // Close the modal on success
            // Optionally refresh the product list or update the UI
            location.reload()
        } else {
            console.error('Error adding product:', response.statusText);
        }
    }).catch(error => {
        console.error('Error uploading:', error);
    });
});

</script>
</body>
</html>