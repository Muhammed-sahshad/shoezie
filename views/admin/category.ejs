<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Categories - SHOEZIE Admin Dashboard</title>
    
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" />
    <link rel="stylesheet" href="/styles/admin/dashboard.css">
    <style>
        /* Custom Table Styles */
        .custom-table {
            width: 100%;
            border-collapse: collapse;
            border: none; /* Remove individual cell borders */
            border-radius: 5px; /* Rounded edges */
            overflow: hidden; /* Ensure corners are rounded */
        }
        .custom-table thead {
            background-color: rgb(153, 176, 220); /* Dark background for table header */
            color: #ffffff;
        }
        .custom-table th, .custom-table td {
            text-align: center; /* Center align table content */
            padding: 10px; /* Padding for cells */
            border: none; /* Remove individual cell borders */
        }
        .custom-table tbody tr:nth-of-type(odd) {
            background-color: #f9f9f9; /* Alternate row color */
        }
        .btn-warning {
            background-color: #ffeeba; /* Light version of warning */
            color: #856404; /* Dark text color */
            margin-right: 10px;
        }
        .btn-danger {
            background-color: #f5c6cb; /* Light version of danger */
            color: #721c24; /* Dark text color */
        }

        .icon-spacing {
            margin-right: 2px; /* Adjust the value as needed */
        }
        #editCategoryNameError, #addCategoryNameError {
            display: none; font-size: 12px; margin-top: 8px;
        }
        #canvas {
            display: none; /* Hide canvas */
        }
        
    </style>
</head>
<body>
    <div class="d-flex" id="wrapper">
        <!-- Sidebar -->
        <%- include('partials/sidebar') %>
        <!-- Page Content -->
        <div id="page-content-wrapper">
            <!-- Navbar -->
            <%- include('partials/navbar') %>
            <!-- Content Area -->
            <div class="container">
                <div class="row mb-4 align-items-center">
                    <div class="col">
                        <h5 class="mt-2">Categories</h5>
                    </div>
                    <div class="col-auto">
                        <button class="btn btn-sm btn-outline-dark" data-toggle="modal" data-target="#addCategoryModal">
                            Add Category
                        </button>
                    </div>
                </div>

                <!-- Categories Table -->
                <% if (category) { %>
                    <div class="table-responsive">
                        <table class="custom-table">
                            <thead>
                                <tr>
                                    <th>No</th>
                                    <th>Image</th>
                                    <th>Category</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% category.forEach((category, index) => { %>
                                    <tr>
                                        <td><%= index + 1 %></td>
                                        <td><img src="<%= category.imageUrl %>" alt="category <%= index + 1 %>" class="img-thumbnail" style="max-width: 50px;"></td>
                                        <td><%= category.name %></td>
                                        <td>
                                            <button class="btn btn-warning btn-sm" onclick="editCategory('<%= category.id %>', '<%= category.name %>', '<%= category.imageUrl %>')">
                                                <i class="fas fa-edit icon-spacing"></i>Edit</button>
                                            <button class="btn <%= category.status ? 'btn-danger' : 'btn-success' %> btn-sm" 
                                             onclick="changeCategoryStatus('<%= category._id %>', this)">
                                             <%= category.status ? 'Unlist' : 'List' %>
                                             </button>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Add Category Modal -->
    <div class="modal fade" id="addCategoryModal" tabindex="-1" role="dialog" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="addCategoryForm" action="/admin/category/add" method="post" enctype="multipart/form-data">
                        <div class="form-group">
                            <label for="categoryName">Category Name</label>
                            <input type="text" class="form-control" id="categoryName" name="categoryName" placeholder="Enter category name" required>
                            <div id="addCategoryNameError" class="text-danger"></div>
                        </div>
                        <div class="form-group">
                            <label for="categoryImage">Category Image</label>
                            <input type="file" class="form-control-file" name="categoryImage" id="categoryImage" accept="image/*" required>
                            <div id="imagePreview" class="mt-2" style="height: 300px;"></div>
                        </div>
                        <canvas id="canvas"></canvas>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary" id="saveCategoryBtn">Add Category</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Category Modal -->
    <div class="modal fade" id="editCategoryModal" tabindex="-1" role="dialog" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editCategoryForm" action="/admin/category/edit" method="post" enctype="multipart/form-data">
                        <input type="hidden" id="editCategoryId" name="categoryId">
                        <div class="form-group">
                            <label for="editCategoryName">Category Name</label>
                            <input type="text" class="form-control" id="editCategoryName" name="categoryName" placeholder="Enter category name" required>
                            <div id="editCategoryNameError" class="text-danger"></div>
                        </div>
                        <div class="form-group">
                            <label for="editCategoryImage">Category Image</label>
                            <input type="file" class="form-control-file" name="categoryImage" id="editCategoryImage" accept="image/*">
                            <div id="editImagePreview" class="mt-2" style="height: 300px;"></div>
                        </div>
                        <canvas id="editCanvas" style="display:none;"></canvas>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary" id="saveEditCategoryBtn">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this category?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>

    <script>
        let cropper;
    
        // Add Category Image Handling
        document.getElementById('categoryImage').addEventListener('change', function(event) {
            const file = event.target.files[0];
            const preview = document.getElementById('imagePreview');
    
            // Clear previous image and cropper instance
            if (cropper) {
                cropper.destroy();
                cropper = null; // Reset cropper variable
                preview.innerHTML = ''; // Clear the preview
            }
    
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.innerHTML = `<img id="cropImage" src="${e.target.result}" alt="Category Image" class="img-thumbnail" style="max-width: 100px;">`;
                    const image = document.getElementById('cropImage');
                    cropper = new Cropper(image, {
                        aspectRatio: 1, // Adjust the aspect ratio as needed
                        viewMode: 1,
                        ready: function () {
                            console.log('Cropper is ready');
                        },
                    });
                };
                reader.readAsDataURL(file);
            }
        });
    
        // Edit Category Image Handling
        function editCategory(id, name, imageUrl) {
            document.getElementById('editCategoryId').value = id;
            document.getElementById('editCategoryName').value = name;
    
            const preview = document.getElementById('editImagePreview');
            
            // Clear previous image and cropper instance
            if (cropper) {
                cropper.destroy();
                cropper = null; // Reset cropper variable
            }
    
            preview.innerHTML = `<img id="editCropImage" src="${imageUrl}" alt="Category Image" class="img-thumbnail" style="max-width: 100px;">`;
            const image = document.getElementById('editCropImage');
            cropper = new Cropper(image, {
                aspectRatio: 1, // Adjust the aspect ratio as needed
                viewMode: 1,
                ready: function () {
                    console.log('Edit cropper is ready');
                },
            });
    
            // Add change event listener to the edit image input
            const editImageInput = document.getElementById('editCategoryImage');
            editImageInput.addEventListener('change', function(event) {
                const file = event.target.files[0];
                const editPreview = document.getElementById('editImagePreview');
    
                // Clear previous image and cropper instance
                if (cropper) {
                    cropper.destroy();
                    cropper = null; // Reset cropper variable
                    editPreview.innerHTML = ''; // Clear the preview
                }
    
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        editPreview.innerHTML = `<img id="editCropImage" src="${e.target.result}" alt="Category Image" class="img-thumbnail" style="max-width: 100px;">`;
                        const image = document.getElementById('editCropImage');
                        cropper = new Cropper(image, {
                            aspectRatio: 1, // Adjust the aspect ratio as needed
                            viewMode: 1,
                            ready: function () {
                                console.log('Edit cropper is ready');
                            },
                        });
                    };
                    reader.readAsDataURL(file);
                }
            });
    
            $('#editCategoryModal').modal('show');
        }
    
        // Handle form submission for Add Category
        document.getElementById('addCategoryForm').addEventListener('submit', function(event) {
            event.preventDefault(); 
            const formData = new FormData();
    
            const categoryName = document.getElementById('categoryName').value;
            const croppedCanvas = cropper.getCroppedCanvas();
            
            formData.append('categoryName', categoryName);
            
            if (croppedCanvas) {
                croppedCanvas.toBlob(function(blob) {
                    formData.append('categoryImage', blob);
                    // Perform your fetch request
                    fetch('/admin/category/add', {
                        method: 'POST',
                        body: formData,
                    })
                    .then(response => {
                        if (response.ok) {
                            // Handle success (e.g., refresh the page or update the table)
                            location.reload();
                        } else {
                            // Handle error
                        }
                    });
                });
            }
        });
    
        // Handle form submission for Edit Category
        document.getElementById('editCategoryForm').addEventListener('submit', function(event) {
            event.preventDefault(); 
            const formData = new FormData();
    
            const categoryId = document.getElementById('editCategoryId').value;
            const categoryName = document.getElementById('editCategoryName').value;
            const croppedCanvas = cropper.getCroppedCanvas();
    
            formData.append('categoryName', categoryName);
            
            if (croppedCanvas) {
                croppedCanvas.toBlob(function(blob) {
                    formData.append('categoryImage', blob);
                    // Perform your fetch request
                    fetch(`/admin/category/edit/${categoryId}`, {
                        method: 'PUT',
                        body: formData,
                    })
                    .then(response => {
                        if (response.ok) {
                            // Handle success (e.g., refresh the page or update the table)
                            location.reload();
                        } else {
                            // Handle error
                        }
                    });
                });
            }
        });

        function changeCategoryStatus(id, button) {
            const currentStatus = button.innerText === 'Unlist'; // Determine current status
            fetch(`/admin/category/${currentStatus ? 'unlist' : 'list'}/${id}`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => {
                if (response.ok) {
                    button.classList.toggle('btn-danger', !currentStatus);
                    button.classList.toggle('btn-success', currentStatus);
                    button.innerText = currentStatus ? 'List' : 'Unlist';
                } else {
                    console.error('Error changing category status');
                    alert('Failed to change category status. Please try again.');
                }
            })
            .catch(error => console.error('Error:', error));
        }
    </script>
    
</body>
</html>
