<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SHOEZIE - Checkout</title>    
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">   
    <!-- Google Fonts: Poppins -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">   
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link rel="stylesheet" href="/styles/user/partials/navbar.css">
    
    <style>
         .summary-card {
            margin-bottom: 20px;
            border: 1px solid #ddd;
            padding: 15px;
            border-radius: 5px;
        }
        .address-field {
            margin-bottom: 15px; /* Space between fields */
        }
        .product-summary {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 5px; /* Reduced gap */
            padding: 5px 10px; /* Padding around the product info */
            border: 1px solid #ddd; /* Border for product details */
            border-radius: 5px; /* Rounded corners */
        }
        .product-summary img {
            width: 50px; /* Image size */
            margin-right: 20px; /* Space between image and text */
            border-radius: 7px;
        }
        .product-details {
            text-align: left; /* Center the product name and size */
            flex-grow: 1;
        }
        .product-price {
            text-align: right; /* Align price to the right */
            width: 100px; /* Fixed width for price */
        }
        .pricing-summary {
            margin-top: 10px;
        }
        .quantity-details{
            text-align: center;
            flex-grow: 1;
        }

        .list-group-item{
            padding: 2px 10px;
            border: none;
            background: transparent;
        }
        /* .summary-card {
            margin-bottom: 20px;
            border: 1px solid #ddd;
            padding: 15px;
            border-radius: 5px;
        } */
        .address-field {
            margin-bottom: 15px; /* Space between fields */
        }
        .error-message {
            color: red;
            font-size: 0.9em;
        }
    </style>
</head>
<body>

<!-- Navbar -->
<%- include('partials/navbar') %>

<main class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <h5>Select Saved Address</h5>
            <select class="form-control" id="addressSelect" onchange="populateAddress()">
                <option value="">Select an address</option>
                <% if(address){ %>
                    <% address.forEach(address =>{ %>
                        <option 
                            value="<%= address.fullname %>" 
                            data-email="<%= address.email %>" 
                            data-address="<%= address.address %>,<%=address.city%>,<%=address.district%>,<%=address.state%>,<%=address.country%>" 
                            data-pincode="<%= address.pincode %>" 
                            data-phone="<%= address.phoneNumber %>">
                            <%= address.fullname %>
                        </option>
                    <% }) %>
                <% } %>
            </select>
        
            <h5 class="mt-4">Shipping Information</h5>
            <form id="shippingForm">
                <input type="text" class="form-control address-field" placeholder="Full Name" required oninput="validateFullName()">
                <div class="error-message" id="fullNameError"></div>

                <!-- <input type="email" class="form-control address-field" placeholder="Email" required oninput="validateEmail()">
                <div class="error-message" id="emailError"></div> -->

                <textarea class="form-control address-field" placeholder="Address" rows="3" required oninput="validateAddress()"></textarea>
                <div class="error-message" id="addressError"></div>

                <input type="text" class="form-control address-field" placeholder="Pincode" required oninput="validatePincode()">
                <div class="error-message" id="pincodeError"></div>

                <input type="text" class="form-control address-field" placeholder="Phone Number" required oninput="validatePhone()">
                <div class="error-message" id="phoneError"></div>
            </form>
        </div>
        
        <div class="col-md-6">
            <h5>Order Summary</h5>
            <div class="summary-card">
                <% let subtotal = 0 %>
                <% if(cart) { %>
                    <div id="cartData" data-cart='<%= JSON.stringify(cart) %>'></div>
                    <% cart.products.forEach(cartItem => { %>
                        <% subtotal += cartItem.productId.price * cartItem.quantity%>
                        <div class="product-summary">
                            <img src="<%= cartItem.productId.imageUrls[0] %>" alt="product img" width="50">
                            <div class="product-details">
                                <strong><%= cartItem.productId.name %></strong><br>
                                <% const size = cartItem.productId.sizes.find(size => size._id.toString() === cartItem.sizeId.toString()) %>
                                <span>Size: <%= size.size %></span>
                            </div>
                            <div class="quantity-details">
                                <span>x <%= cartItem.quantity %></span>
                            </div>
                            <div class="product-price">
                                <span>₹ <%= cartItem.productId.price * cartItem.quantity %></span>
                            </div>
                        </div>      
                    <% }); %>
                <% } %>
                
                <div class="pricing-summary">
                    <ul class="list-group">
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Subtotal:</span>
                            <span>₹ <%= subtotal %></span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Discount:</span>
                            <span>₹ 0</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Delivery Fee:</span>
                            <span>₹ 0</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <strong>Total:</strong>
                            <strong>₹ <%= subtotal %></strong>
                        </li>
                    </ul>
                    <div class="mt-3">
                        <h5 class="mt-3">Payment Method</h5>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="bankTransfer" value="bank">
                            <label class="form-check-label" for="bankTransfer">
                                Bank Transfer
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="cashOnDelivery">
                            <label class="form-check-label" for="cod">
                                Cash on Delivery
                            </label>
                        </div>
                    </div>
                    <div class="text-left mt-3">
                        <button id="placeOrderButton" class="btn btn-success" disabled>Place Order <i class="fas fa-arrow-right"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<!-- Bootstrap JS and dependencies -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script>
    const placeOrderButton = document.getElementById('placeOrderButton');

    function validateFullName() {
        const fullNameInput = document.querySelector('input[placeholder="Full Name"]');
        const errorMessage = document.getElementById('fullNameError');
        const isValid = fullNameInput.value.trim() !== '';

        errorMessage.textContent = isValid ? '' : 'Full Name is required.';
        checkFormValidity();
    }

    // function validateEmail() {
    //     const emailInput = document.querySelector('input[placeholder="Email"]');
    //     const errorMessage = document.getElementById('emailError');
    //     const isValid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(emailInput.value);

    //     errorMessage.textContent = isValid ? '' : 'Please enter a valid email address.';
    //     checkFormValidity();
    // }

    function validateAddress() {
        const addressInput = document.querySelector('textarea[placeholder="Address"]');
        const errorMessage = document.getElementById('addressError');
        const isValid = addressInput.value.trim() !== '';

        errorMessage.textContent = isValid ? '' : 'Address is required.';
        checkFormValidity();
    }

    function validatePincode() {
        const pincodeInput = document.querySelector('input[placeholder="Pincode"]');
        const errorMessage = document.getElementById('pincodeError');
        const isValid = /^\d{6}$/.test(pincodeInput.value); // Assuming Indian pin codes

        errorMessage.textContent = isValid ? '' : 'Please enter a valid 6-digit pincode.';
        checkFormValidity();
    }

    function validatePhone() {
        const phoneInput = document.querySelector('input[placeholder="Phone Number"]');
        const errorMessage = document.getElementById('phoneError');
        const isValid = /^\d{10}$/.test(phoneInput.value); // Assuming 10-digit phone numbers

        errorMessage.textContent = isValid ? '' : 'Please enter a valid 10-digit phone number.';
        checkFormValidity();
    }

    function checkFormValidity() {
        const fullNameValid = document.getElementById('fullNameError').textContent === '';
        // const emailValid = document.getElementById('emailError').textContent === '';
        const addressValid = document.getElementById('addressError').textContent === '';
        const pincodeValid = document.getElementById('pincodeError').textContent === '';
        const phoneValid = document.getElementById('phoneError').textContent === '';

        // Enable the button only if all validations pass
        placeOrderButton.disabled = !(fullNameValid && addressValid && pincodeValid && phoneValid);
    }

    function populateAddress() {
        const addressSelect = document.getElementById('addressSelect');
        const fullnameInput = document.querySelector('input[placeholder="Full Name"]');
        // const emailInput = document.querySelector('input[placeholder="Email"]');
        const addressInput = document.querySelector('textarea[placeholder="Address"]');
        const pincodeInput = document.querySelector('input[placeholder="Pincode"]');
        const phoneInput = document.querySelector('input[placeholder="Phone Number"]');
    
        const selectedOption = addressSelect.options[addressSelect.selectedIndex];
    
        if (selectedOption.value) {
            // Populate the input fields with the selected address details
            fullnameInput.value = selectedOption.value;
            // emailInput.value = selectedOption.getAttribute('data-email');
            addressInput.value = selectedOption.getAttribute('data-address');
            pincodeInput.value = selectedOption.getAttribute('data-pincode');
            phoneInput.value = selectedOption.getAttribute('data-phone');
        } else {
            // Clear the fields if no valid address is selected
            fullnameInput.value = '';
            // emailInput.value = '';
            addressInput.value = '';
            pincodeInput.value = '';
            phoneInput.value = '';
        }

        // Check validity after populating fields
        validateFullName();
        // validateEmail();
        validateAddress();
        validatePincode();
        validatePhone();
    }


    async function placeOrder() {
    const fullName = document.querySelector('input[placeholder="Full Name"]').value;
    const address = document.querySelector('textarea[placeholder="Address"]').value;
    const pincode = document.querySelector('input[placeholder="Pincode"]').value;
    const phoneNumber = document.querySelector('input[placeholder="Phone Number"]').value;
    const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;

    // Assuming userId is available (from user session or context)
 // Replace with actual user ID in your template
 const cartElement = document.getElementById('cartData');
 const cart = JSON.parse(cartElement.getAttribute('data-cart'));

    // Prepare the items data from the cart
    const items = cart.products.map(item => ({
        productId: item.productId._id,
        sizeId: item.sizeId,
        quantity: item.quantity,
        price: item.productId.price   
    }));

   console.log(items);
   
    

    const totalAmount = cart.products.reduce((acc, item) => acc + (item.productId.price * item.quantity), 0);

    const shippingAddress = {
        fullname: fullName,
        address,
        pincode,
        phone: phoneNumber
    };

    // Prepare the full order data
    const orderData = {
        items,
        totalAmount,
        shippingAddress,
        paymentMethod
    };

    try {
        const response = await fetch('/user/cart/checkout/confirm-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(orderData)
        });

        if (response.ok) {
    
            const data = await response.json();
            await Toastify({
                text: data.message,
                duration: 3000,
                close: true,
                gravity: "top",
                position: 'center',
                backgroundColor: "#4CAF50",
            }).showToast();
            setTimeout(function() {
    window.location.href = '/user/profile/orders'; // Redirects to the orders page
}, 3000);
        // Log or use the response message and orderId
        console.log(data.message);  // 'Order placed successfully!'
        console.log(data.orderId); 
            
            // window.location.href = '/order/success';
        } else {
            alert('Error placing order. Please try again.');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('There was an issue placing your order.');
    }
}

placeOrderButton.addEventListener('click', function (e) {
        e.preventDefault(); // Prevent form submission (since we're using JavaScript to handle it)
        placeOrder();
    });
</script>

</body>
</html>
