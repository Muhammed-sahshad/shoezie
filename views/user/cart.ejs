<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SHOEZIE - Cart</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="/styles/user/partials/navbar.css">
    <style>
    .product-card {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 15px; 
        border: 1px solid #ddd;
        padding: 10px; 
        border-radius: 5px;
        height: 100px;
    }
    .product-info {
        flex-grow: 1;
        margin-left: 10px; 
    }
    .product-info p{
        margin: 0;
    }
    .delete-icon {
        cursor: pointer;
        color: red;
        font-size: 1em;
        display: block;
        text-align: right;
        margin-bottom: 20px;
        margin-right: 10px;
    }

    .quantity-input {
        height: 30px;
        width: 65px;
        margin-top: 5px; 
    }
    </style>
</head>
<body>
<%- include('partials/navbar') %>

<main class="container mt-5">
    <div class="row">
        <% let subtotal = 0; %> 
        <% if (cart.products.length > 0) {%>

        <div class="col-md-8">
            <h4>Products</h4>
                <% cart.products.forEach(cart => {%>
                    <div class="product-card">
                        <img src="<%= cart.productId.imageUrls[0] %>" class="img-fluid" alt="Stylish Sneakers" style="width: 75px; border-radius: 10px; margin-right: 20px;">
                        <div class="product-info">
                            <P class="font-weight-bold"><%= cart.productId.name %></P>

                           <%   const size = cart.productId.sizes.find(size =>
                             size._id.toString() === cart.sizeId.toString())   %>

                            <p>Size: <%= size.size %></p>
                            <p >₹ <%= cart.productId.price %></p>
                        </div>
                        <div>
                            <span class="delete-icon" onclick="removeProduct('<%= cart._id %>')">
                                <i class="fas fa-trash"></i>
                            </span>
                            <input type="number" value="<%= cart.quantity %>" min="1" class="form-control quantity-input" oninput="debounceUpdateQuantity('<%= cart._id %>', this.value)">
                        </div>
                    </div>
                    <% subtotal += cart.productId.price * cart.quantity; %>
                <% }); %>    
        </div>
        <% }else{ %>
            <p class="text-center">there is no items in your cart  <a href="/user/shop">shop</a> now</p>
                       <% } %>

        <% if(cart.products.length > 0){ %>
        <div class="col-md-4">
            <h4>Order Summary</h4>
            <ul class="list-group">
                <li class="list-group-item d-flex justify-content-between">
                    <span>Subtotal:</span>
                    <span id="subtotal">₹ <%= subtotal %></span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <span>Discount:</span>
                    <span>₹ 0</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <span>Delivery Fee:</span>
                    <span>₹ 0</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <strong>Total:</strong>
                    <strong id="total">₹ <%= subtotal %></strong>
                </li>
            </ul>
            <div class="text-center mt-4">
                <a href="/user/cart/checkout" class="btn btn-success">Go to Checkout <i class="fas fa-arrow-right"></i></a>
            </div>
        </div>
        <% } %>
    </div>
</main>

<!-- Bootstrap JS and dependencies -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function removeProduct(productId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "This product will be removed from your cart.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!',
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/user/cart/remove/${productId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
                .then((response) => response.json())
                .then((data) => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Removed!',
                            text: data.message,
                            icon: 'success',
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'OK',
                        }).then(() => {
                            location.reload(); 
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: 'Error removing from cart: ' + data.message,
                            icon: 'error',
                            confirmButtonColor: '#d33',
                            confirmButtonText: 'Try Again',
                        });
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'Could not remove the product. Please try again.',
                        icon: 'error',
                        confirmButtonColor: '#d33',
                        confirmButtonText: 'OK',
                    });
                });
        }
    });
}

 let debounceTimer;

function debounceUpdateQuantity(cartId, newQuantity) {
    clearTimeout(debounceTimer); 
    debounceTimer = setTimeout(() => {
        updateQuantity(cartId, newQuantity); 
    }, 2000);  
}

function updateQuantity(cartId, newQuantity) {

    if (newQuantity < 1) {
        alert("Quantity cannot be less than 1");
        return;
    }

    const data = { quantity: newQuantity };


    fetch(`/user/cart/update/${cartId}`, {
        method: 'PUT', 
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data), 
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Toastify({
                text: data.message,
                duration: 3000,
                close: true,
                gravity: "bottom",
                position: 'center',
                backgroundColor: "#4CAF50",
            }).showToast();
            updateOrderSummary()
        }else{
            Toastify({
            text:  data.message,
            duration: 3000,
            close: true,
            gravity: "bottom",
            position: 'center',
            backgroundColor: "#f44336",
        }).showToast()
        }
        
    })
    .catch(error => 
    Toastify({
            text: 'Error adding to cart:'+ error.message,
            duration: 3000,
            close: true,
            gravity: "bottom",
            position: 'center',
            backgroundColor: "#f44336",
        }).showToast(),
    console.error("Error:", error));
}

function updateOrderSummary() {
        let subtotal = 0;
        document.querySelectorAll('.product-card').forEach(productCard => {
            const priceElement = productCard.querySelector('.product-info p:nth-of-type(3)');
            const quantityElement = productCard.querySelector('.quantity-input');
            const price = parseFloat(priceElement.innerText.replace('₹', '').trim());
            const quantity = parseInt(quantityElement.value);
            subtotal += price * quantity;           
        });
        document.getElementById('subtotal').innerText = subtotal.toFixed(2);
        document.getElementById('total').innerText = subtotal.toFixed(2);
    }
</script>
</body>
</html>
