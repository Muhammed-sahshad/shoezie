       <%- include('partials/header') %>

    <style>
        body {
            font-family: 'Poppins', sans-serif; /* Set Poppins as the default font */
        }
        .forgot-password-container {
            max-width: 470px;
            width: 100%;
            padding: 40px;
            background-color: #f7f7f7; 
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2); 
            margin: auto;
        }
        .input-boxes {
            margin-top: 20px;
            gap: 20px;
        }
        .input-boxes input {
            width: 40px;
            height: 40px;
            padding-left: 14px;
            border: 1px solid rgb(161, 161, 161);
            border-radius: 6px;
        }
        .verify-btn {
            margin-top: 10px;
            background-color: black;
            color: white;
            border-radius: 6px;
        }
        .verify-btn:hover {
            color: white;
            opacity: 0.8;
        }
    </style>
</head>
<body>
    <div class="d-flex justify-content-center align-items-center min-vh-100">
        <div class="forgot-password-container">
            <h3 class="text-center mb-4">Forgot Password</h3>
            <form id="forgotPasswordForm">
                <div id="emailSection">
                    <label for="email"><small>Enter Your Email</small></label>
                    <input type="email" class="form-control" id="email" placeholder="Enter your email" required>
                    <button type="button" onclick="sendOtp()" class="btn verify-btn btn-block mt-4">Send OTP</button>
                </div>
                <div id="otpSection" style="display: none;">
                    <h5 class="text-center">Enter OTP</h5>
                    <p class="text-center">A 6-digit OTP has been sent to your email.</p>
                    <div class="d-flex justify-content-center mb-4 input-boxes">
                        <input type="text" maxlength="1" class="otp-input" id="otp1" oninput="moveFocus(this, 'otp2')" onkeydown="handleBackspace(event, 'otp1')"
                 onkeypress="return event.charCode >= 48 && event.charCode <= 57"  required>
                <input type="text" maxlength="1" class="otp-input" id="otp2" oninput="moveFocus(this, 'otp3')" onkeydown="handleBackspace(event, 'otp2')" onkeypress="return event.charCode >= 48 && event.charCode <= 57"  required>
                <input type="text" maxlength="1" class="otp-input" id="otp3" oninput="moveFocus(this, 'otp4')" onkeydown="handleBackspace(event, 'otp3')" onkeypress="return event.charCode >= 48 && event.charCode <= 57"  required>
                <input type="text" maxlength="1" class="otp-input" id="otp4" oninput="moveFocus(this, 'otp5')" onkeydown="handleBackspace(event, 'otp4')" onkeypress="return event.charCode >= 48 && event.charCode <= 57"  required>
                <input type="text" maxlength="1" class="otp-input" id="otp5" oninput="moveFocus(this, 'otp6')" onkeydown="handleBackspace(event, 'otp5')" onkeypress="return event.charCode >= 48 && event.charCode <= 57"  required>
                <input type="text" maxlength="1" class="otp-input" id="otp6" oninput="moveFocus(this, 'otp6')" onkeydown="handleBackspace(event, 'otp6')" onkeypress="return event.charCode >= 48 && event.charCode <= 57"  required>
                    </div>
                    <button type="button" id="verifyBtn" class="btn verify-btn btn-block" onclick="submitOTP()">Verify OTP</button>
                    <div class="text-center mt-3" id="timer"></div>
                    <div class="text-center mt-3">
                        <button type="button" id="resendBtn" class="btn btn-link" onclick="resendOTP()" disabled>Resend OTP</button>
                    </div>
                </div>
                <div id="passwordSection" style="display: none;">
                    <label for="password"><small>New Password</small></label>
                    <input type="password" class="form-control" id="password" placeholder="Enter new password" required>
                    <label for="confirmPassword"><small>Confirm Password</small></label>
                    <input type="password" class="form-control" id="confirmPassword" placeholder="Confirm new password" required>
                    <button type="button" class="btn verify-btn btn-block mt-2" onclick="resetPassword()">Reset Password</button>
                </div>
            </form>
            <div class="text-center mt-3">
                <a href="/login"><small>Back to Login</small></a>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let timer;
        let timeLeft = 60;
    
        function startTimer() {
            timer = setInterval(() => {
                if (timeLeft <= 0) {
                    clearInterval(timer);
                    document.getElementById('timer').innerHTML = "OTP expired";
                    document.getElementById('resendBtn').disabled = false;
                } else {
                    document.getElementById('timer').innerHTML = `${timeLeft} seconds remaining`;
                }
                timeLeft--;
            }, 1000);
        }
    
        function moveFocus(current, nextId) {
            if (current.value.length >= 1) {
                document.getElementById(nextId).focus();
            }
        }
    
        function handleBackspace(event, currentId) {
            if (event.key === 'Backspace') {
                const currentInput = document.getElementById(currentId);
                if (currentInput.value === '') {
                    const previousId = 'otp' + (parseInt(currentId.replace('otp', '')) - 1);
                    const previousInput = document.getElementById(previousId);
                    previousInput.focus();
                }
            }
        }
    
        function showSection(sectionId) {
    // Hide all sections first
    document.getElementById('emailSection').style.display = 'none';
    document.getElementById('otpSection').style.display = 'none';
    document.getElementById('passwordSection').style.display = 'none';

    // Show the requested section
    document.getElementById(sectionId).style.display = 'block';
}

        function sendOtp() {
            const email = document.getElementById('email').value.trim();
            if (!email) {
                Swal.fire('Error', 'Please enter a valid email', 'error');
                return;
            }
    
            fetch('/forgot-password/send-otp', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ email }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showSection('otpSection');
                    startTimer();
                    Swal.fire('Success', data.message, 'success');
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            })
            .catch(error => console.error('Error:', error));
        }
    
        function submitOTP() {
            const otp = Array.from({ length: 6 }, (_, i) =>
        document.getElementById(`otp${i + 1}`).value
    ).join('');
    
            if (otp.length !== 6) {
                Swal.fire('Error', 'Please enter a valid 6-digit OTP', 'error');
                return;
            }
    
            fetch('/forgot-password/verify-otp', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ otp }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showSection('passwordSection');
                    Swal.fire('Success', data.message, 'success');
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            })
            .catch(error => console.error('Error:', error));
        }
    
        function resetPassword() {
            const password = document.getElementById('password').value.trim();
            const confirmPassword = document.getElementById('confirmPassword').value.trim();
    
            if (password.length < 6) {
                Swal.fire('Error', 'Password must be at least 6 characters long', 'error');
                return;
            }
            if(password !== confirmPassword){
                Swal.fire('Error', 'Password doesnt match.', 'error');
                return;
            }
            
            fetch('/forgot-password/reset', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ password }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Success', data.message, 'success').then(() => {
                        window.location.href = '/login';
                    });
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            })
            .catch(error => console.error('Error:', error));
        }
    
        function resendOTP() {
            document.getElementById('resendBtn').disabled = true;
    
            fetch('/forgot-password/resend-otp', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    timeLeft = 60;
                    startTimer();
                    Swal.fire('Success', data.message, 'success');
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            })
            .catch(error => console.error('Error:', error));
        }
    </script>
    
</body>
</html>
